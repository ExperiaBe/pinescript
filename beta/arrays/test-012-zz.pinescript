// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© RicardoSantos

//@version=4
study("test-012-", overlay=true)
float h = pivothigh(high, 2, 2)
float l = pivotlow(high, 2, 2)

var int z = 0
var bool direction = false

if direction
    if h
        direction := false
        z := bar_index
    if l
        z := bar_index
else
    if l
        direction := true
        z := bar_index
    if h
        z := bar_index

plot(h, color=color.red, linewidth=2, style=plot.style_circles)
plot(l, color=color.lime, linewidth=2, style=plot.style_circles)
float zigzag = direction ? l[bar_index-z] : h[bar_index-z]
plot(zigzag)

int array_maximum_storage = 10
var int[] zz = array.newint(size=1, initial_value=0)
int current_size = array.size(id=zz)

float sum = 0.

var float avg = sum / current_size
var float deriv = 0.

if change(z) != 0
    if direction != direction[1]
        if current_size <= array_maximum_storage
            array.insert(id=zz, index=0, value=z)
        else
            array.remove(id=zz, index=array_maximum_storage-1)
            array.insert(id=zz, index=0, value=z)
    else
        if current_size <= array_maximum_storage
            array.set(id=zz, index=0, value=z)
        else
            array.set(id=zz, index=0, value=z)

    for _i = 0 to current_size-1
        _bar = array.get(id=zz, index=_i)
        sum := sum + (direction[bar_index-_bar] ? l[bar_index-_bar] : h[bar_index-_bar])
    
    avg := sum / current_size
    deriv := change(avg)

var line center = line.new(x1=bar_index, y1=0.0, x2=bar_index, y2=0.0, extend=extend.both, color=color.silver, width=1)
// var line top = line.new(x1=bar_index, y1=0.0, x2=bar_index, y2=0.0, extend=extend.both, color=color.silver, width=1)
// var line bot = line.new(x1=bar_index, y1=0.0, x2=bar_index, y2=0.0, extend=extend.both, color=color.silver, width=1)

if current_size > 1
    int previous_bar = array.get(id=zz, index=1)
    int current_bar = array.get(id=zz, index=0)
    line.set_xy1(id=center, x=previous_bar, y=avg[bar_index - previous_bar])
    line.set_xy2(id=center, x=current_bar, y=avg[bar_index - current_bar])

plot(avg)